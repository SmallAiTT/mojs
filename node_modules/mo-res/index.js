var path = require("path");
var fs = require("fs");
var moUtils = require("mo-utils");

exports.genResPathMap = function(optList){
    optList = optList instanceof Array ? optList : [optList];
    var map = {};
    for(var i = 0, li = optList.length; i < li; i++){
        var opt = optList[i];
        var dir = opt.dir,
            extnames = opt.extnames,
            ignores = opt.ignores,
            placeholder = opt.placeholder || {},//占位符
            prefix = opt.prefix;
        moUtils.walkDirSync(dir, extnames, ignores, function(filePath){
            filePath = path.relative(dir, filePath);
            if(prefix) path.join(prefix, filePath);
            filePath = filePath.replace(/\\/gi, "/");
            for (var key in placeholder) {
                var value = placeholder[key];
                var tempPath = path.relative(value, filePath);
                tempPath = tempPath.replace(/\\/gi, "/");
                if(tempPath.indexOf("../") != 0){
                    filePath = "${" + key + "}/" + tempPath;
                    break;
                }
            }
            var keyName = moUtils.getFileKey(path.basename(filePath));
            if(map[keyName]) console.log("资源映射中已经存在key为【%s】的内容【%s】，当前内容为：【%s】，请检查！", keyName, map[keyName], filePath);
            map[keyName] = filePath;
        });
    }
    return map;
};

//var opt = {
//    dir : path.join(__dirname, "../mo-ccs"),
//    extnames : ".js",
//    placeholder:{async:"node_modules/async"}
//};
//console.log(exports.genResPathMap(opt));

/**
 * 生成资源路径配置文件。
 * @param namespace
 * @param output
 * @param optList
 */
exports.genResPathFile = function(namespace, output, optList){
    var resMap = exports.genResPathMap(optList);
    fs.writeFileSync(output, moUtils.formatStr("var %s = %s;", namespace, moUtils.stringify(resMap)));
};
//exports.genResPathFile("res", path.join(__dirname, "res.js"), opt);